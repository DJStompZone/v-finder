#!/bin/bash
echo "Welcome to my scanner ! " | pv -qL 40
if [ "$*" == "-h" ]; then
  echo     " Can pass hostnames, IP addresses, networks, etc."
  echo  "Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254"
  echo "-iL <inputfilename>: Input from list of hosts/networks"
  echo "-iR <num hosts>: Choose random targets"
  echo "--exclude <host1[,host2][,host3],...>: Exclude hosts/networks"
  echo "--excludefile <exclude_file>: Exclude list from file"
  echo "HOST DISCOVERY:"
  echo "-sL: List Scan - simply list targets to scan"
  echo "-sn: Ping Scan - disable port scan"
  echo "-Pn: Treat all hosts as online -- skip host discovery"
  echo "-PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports"
  echo "-PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes"
  echo "-PO[protocol list]: IP Protocol Ping"
  echo "-n/-R: Never do DNS resolution/Always resolve [default: sometimes]"
  echo "--dns-servers <serv1[,serv2],...>: Specify custom DNS servers"
  echo "--system-dns: Use OS's DNS resolver"
  echo "--traceroute: Trace hop path to each host"
  echo "SCAN TECHNIQUES:"
  echo "-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans"
  echo "-sU: UDP Scan"
  echo "-sN/sF/sX: TCP Null, FIN, and Xmas scans"
  echo "--scanflags <flags>: Customize TCP scan flags"
  echo "-sI <zombie host[:probeport]>: Idle scan"
  echo "-sY/sZ: SCTP INIT/COOKIE-ECHO scans"
  echo "-sO: IP protocol scan"
  echo "-b <FTP relay host>: FTP bounce scan"
  echo "PORT SPECIFICATION AND SCAN ORDER:"
  echo "-p <port ranges>: Only scan specified ports"
  echo "Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9"
  echo "--exclude-ports <port ranges>: Exclude the specified ports from scanning"
  echo "-F: Fast mode - Scan fewer ports than the default scan"
  echo "-r: Scan ports consecutively - don't randomize"
  echo "--top-ports <number>: Scan <number> most common ports"
  echo "--port-ratio <ratio>: Scan ports more common than <ratio>"
  echo "SERVICE/VERSION DETECTION:"
  echo "-sV: Probe open ports to determine service/version info"
  echo "--version-intensity <level>: Set from 0 (light) to 9 (try all probes)"
  echo "--version-light: Limit to most likely probes (intensity 2)"
  echo "--version-all: Try every single probe (intensity 9)"
  echo "--version-trace: Show detailed version scan activity (for debugging)"
  echo "SCRIPT SCAN:"
  echo "-sC: equivalent to --script=default"
  echo "--script=<Lua scripts>: <Lua scripts> is a comma separated list of"
  echo "         directories, script-files or script-categories"
  echo "--script-args=<n1=v1,[n2=v2,...]>: provide arguments to scripts"
  echo "--script-args-file=filename: provide NSE script args in a file"
  echo "--script-trace: Show all data sent and received"
  echo "--script-updatedb: Update the script database."
  echo "--script-help=<Lua scripts>: Show help about scripts."
  echo "         <Lua scripts> is a comma-separated list of script-files or"
  echo "         script-categories."
  echo "OS DETECTION:"
  echo "-O: Enable OS detection"
  echo "--osscan-limit: Limit OS detection to promising targets"
  echo "--osscan-guess: Guess OS more aggressively"
  echo "TIMING AND PERFORMANCE:"
  echo "Options which take <time> are in seconds, or append 'ms' (milliseconds),"
  echo "'s' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m)."
  echo "-T<0-5>: Set timing template (higher is faster)"
  echo "--min-hostgroup/max-hostgroup <size>: Parallel host scan group sizes"
  echo "--min-parallelism/max-parallelism <numprobes>: Probe parallelization"
  echo "--min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout <time>: Specifies"
  echo "    probe round trip time."
  echo "--max-retries <tries>: Caps number of port scan probe retransmissions."
  echo "--host-timeout <time>: Give up on target after this long"
  echo "--scan-delay/--max-scan-delay <time>: Adjust delay between probes"
  echo "--min-rate <number>: Send packets no slower than <number> per second"
  echo "--max-rate <number>: Send packets no faster than <number> per second"
  echo "FIREWALL/IDS EVASION AND SPOOFING:"
  echo "-f; --mtu <val>: fragment packets (optionally w/given MTU)"
  echo "-D <decoy1,decoy2[,ME],...>: Cloak a scan with decoys"
  echo "-S <IP_Address>: Spoof source address"
  echo "-e <iface>: Use specified interface"
  echo "-g/--source-port <portnum>: Use given port number"
  echo "--proxies <url1,[url2],...>: Relay connections through HTTP/SOCKS4 proxies"
  echo "--data <hex string>: Append a custom payload to sent packets"
  echo "--data-string <string>: Append a custom ASCII string to sent packets"
  echo "--data-length <num>: Append random data to sent packets"
  echo "--ip-options <options>: Send packets with specified ip options"
  echo "--ttl <val>: Set IP time-to-live field"
  echo "--spoof-mac <mac address/prefix/vendor name>: Spoof your MAC address"
  echo "--badsum: Send packets with a bogus TCP/UDP/SCTP checksum"
  echo "OUTPUT:"
  echo "-oN/-oX/-oS/-oG <file>: Output scan in normal, XML, s|<rIpt kIddi3,"
  echo "   and Grepable format, respectively, to the given filename."
  echo "-oA <basename>: Output in the three major formats at once"
  echo "-v: Increase verbosity level (use -vv or more for greater effect)"
  echo "-d: Increase debugging level (use -dd or more for greater effect)"
  echo "--reason: Display the reason a port is in a particular state"
  echo "--open: Only show open (or possibly open) ports"
  echo "--packet-trace: Show all packets sent and received"
  echo "--iflist: Print host interfaces and routes (for debugging)"
  echo "--append-output: Append to rather than clobber specified output files"
  echo "--resume <filename>: Resume an aborted scan"
  echo "--stylesheet <path/URL>: XSL stylesheet to transform XML output to HTML"
  echo "--webxml: Reference stylesheet from Nmap.Org for more portable XML"
  echo "--no-stylesheet: Prevent associating of XSL stylesheet w/XML output"
  echo "MISC:"
  echo "-6: Enable IPv6 scanning"
  echo "-A: Enable OS detection, version detection, script scanning, and traceroute"
  echo "--datadir <dirname>: Specify custom Nmap data file location"
  echo "--send-eth/--send-ip: Send using raw ethernet frames or IP packets"
  echo "--privileged: Assume that the user is fully privileged"
  echo "--unprivileged: Assume the user lacks raw socket privileges"
  echo "-V: Print version number"
  echo "-h: Print this help summary page." 

elif [[ ! "$*" ]]; then 
  echo "Please Input the IP you want me to  scan : " | pv -qL 40
  read IP 
  echo "Input the options you want to associate with the IP" | pv -qL 40
  read options
  echo "Your scan is starting,I hope you're not doing anything illegal with it :)" | pv -qL 40
  sudo nmap "$options" "$IP" | pv -qL 40
fi
